name: async0-python-be CI pipeline

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ruff
        run: pip install ruff

      - name: Run ruff
        run: ruff check src

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image to dockerhub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/async0:python-latest
            ${{ secrets.DOCKER_USERNAME }}/async0:python-${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      packages: write
    needs:
      - build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write env files
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

          cat << 'EOF' > ./pyserver.env
          ${{ secrets.PYSERVER_ENV_VARS }}
          EOF

      - name: Copy py env files
        uses: appleboy/scp-action@v1
        with:
          host: async0.com
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "pyserver.env"
          target: /home/deploy

      - name: Create docker config for pyserver
        uses: appleboy/ssh-action@v1
        with:
          host: async0.com
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            docker config rm pyserver-config
            docker config create pyserver-config ./pyserver.env

            rm -f ./pyserver.env

      - name: Stack Update
        uses: appleboy/ssh-action@v1
        with:
          host: async0.com
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            docker service update --image grvbrk/async0:python-${{ github.sha }} async0_pyserver
